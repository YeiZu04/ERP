// <auto-generated />
using System;
using ERP_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP_API.Migrations
{
    [DbContext(typeof(ERPDbContext))]
    [Migration("20240830154943_AddFieldsToPersonAndRole")]
    partial class AddFieldsToPersonAndRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERP_API.Models.Benefit", b =>
                {
                    b.Property<int>("IdBenefits")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_benefits");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBenefits"));

                    b.Property<string>("DescriptionBenefits")
                        .HasMaxLength(200)
                        .HasColumnType("nchar(200)")
                        .HasColumnName("description_benefits")
                        .IsFixedLength();

                    b.Property<string>("NameBenefits")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("name_benefits")
                        .IsFixedLength();

                    b.HasKey("IdBenefits");

                    b.ToTable("Benefit", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.BenefitsEmployee", b =>
                {
                    b.Property<int>("IdBenefitsEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_benefits_employee");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBenefitsEmployee"));

                    b.Property<int>("IdBenefitsFk")
                        .HasColumnType("int")
                        .HasColumnName("id_benefits_fk");

                    b.Property<int>("IdEmployeeFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employee_fk");

                    b.HasKey("IdBenefitsEmployee");

                    b.HasIndex("IdBenefitsFk");

                    b.HasIndex("IdEmployeeFk");

                    b.ToTable("BenefitsEmployee", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Candidate", b =>
                {
                    b.Property<int>("IdCandidate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_candidate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCandidate"));

                    b.Property<DateTime?>("ApplicationDateCandidate")
                        .HasColumnType("datetime")
                        .HasColumnName("application_date_candidate");

                    b.Property<int?>("IdPersonFk")
                        .HasColumnType("int")
                        .HasColumnName("id_person_fk");

                    b.Property<string>("PositionAppliedCandidate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("position_applied_candidate");

                    b.HasKey("IdCandidate")
                        .HasName("PK__Candidat__3CD1A87F17A41FDF");

                    b.HasIndex("IdPersonFk");

                    b.ToTable("Candidate", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Company", b =>
                {
                    b.Property<int>("IdCompany")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_company");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompany"));

                    b.Property<string>("CodeCompany")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("code_company");

                    b.Property<string>("DescriptionCompany")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("description_company");

                    b.Property<string>("LocationCompany")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("location_company");

                    b.Property<string>("NameCompany")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name_company");

                    b.Property<byte>("StatusCompany")
                        .HasColumnType("tinyint")
                        .HasColumnName("status_company");

                    b.Property<string>("UrlCompany")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("url_company");

                    b.HasKey("IdCompany")
                        .HasName("PK__Company__5D0E9F0690327F24");

                    b.HasIndex(new[] { "CodeCompany" }, "UQ__Company__A8E62A4EB7995DF6")
                        .IsUnique();

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Curriculum", b =>
                {
                    b.Property<int>("IdCurriculum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curriculum");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurriculum"));

                    b.Property<DateTime?>("DateUploaded")
                        .HasColumnType("date")
                        .HasColumnName("date_uploaded");

                    b.Property<int?>("IdEmployeeFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employee_fk");

                    b.Property<string>("PathFileCurriculum")
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .HasColumnName("path_file_curriculum")
                        .IsFixedLength();

                    b.HasKey("IdCurriculum")
                        .HasName("PK__Curricul__8151415FCF29CF7D");

                    b.HasIndex("IdEmployeeFk");

                    b.ToTable("Curriculum", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.CurriculumCandidate", b =>
                {
                    b.Property<int>("IdCurriculumCandidate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_curriculumCandidate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCurriculumCandidate"));

                    b.Property<int?>("IdCandidateFk")
                        .HasColumnType("int")
                        .HasColumnName("id_candidate_fk");

                    b.Property<string>("PathCurriculumCandidate")
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .HasColumnName("path_curriculum_candidate")
                        .IsFixedLength();

                    b.HasKey("IdCurriculumCandidate")
                        .HasName("PK__Curricul__1F7DA07626B967EF");

                    b.HasIndex("IdCandidateFk");

                    b.ToTable("CurriculumCandidate", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_employee");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployee"));

                    b.Property<string>("DepartmentEmployee")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("department_employee")
                        .IsFixedLength();

                    b.Property<DateTime>("HiringDateEmployee")
                        .HasColumnType("date")
                        .HasColumnName("hiring_date_employee");

                    b.Property<int?>("IdUserFk")
                        .HasColumnType("int")
                        .HasColumnName("id_user_fk");

                    b.Property<double>("NetSalaryEmployee")
                        .HasColumnType("float")
                        .HasColumnName("net_salary_employee");

                    b.Property<string>("PositionEmployee")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("position_employee")
                        .IsFixedLength();

                    b.Property<int?>("VacationsEmployee")
                        .HasColumnType("int")
                        .HasColumnName("vacations_employee");

                    b.HasKey("IdEmployee")
                        .HasName("PK__Employee__F807679C158F656B");

                    b.HasIndex("IdUserFk");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Filter", b =>
                {
                    b.Property<int>("IdFilter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_filter");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilter"));

                    b.Property<DateTime?>("DateFilter")
                        .HasColumnType("datetime")
                        .HasColumnName("date_filter");

                    b.Property<string>("DescriptionFilter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_filter");

                    b.Property<string>("NameFilter")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("name_filter")
                        .IsFixedLength();

                    b.Property<string>("ObservationAboutCandidate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("observation_about_candidate");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("IdFilter")
                        .HasName("PK__Filter__F614A2C5F995FDDE");

                    b.ToTable("Filter", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.FilterCandidate", b =>
                {
                    b.Property<int>("IdFilterCandidate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_filter_candidate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilterCandidate"));

                    b.Property<int?>("IdCandidateFk")
                        .HasColumnType("int")
                        .HasColumnName("id_candidate_fk");

                    b.Property<int?>("IdFilterFk")
                        .HasColumnType("int")
                        .HasColumnName("id_filter_fk");

                    b.HasKey("IdFilterCandidate")
                        .HasName("PK__FilterCa__3808217E2FEF49C3");

                    b.HasIndex("IdCandidateFk");

                    b.HasIndex("IdFilterFk");

                    b.ToTable("FilterCandidate", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Notification", b =>
                {
                    b.Property<int>("IdNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_notification");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotification"));

                    b.Property<DateTime>("DateNotification")
                        .HasColumnType("datetime")
                        .HasColumnName("date_notification");

                    b.Property<string>("DescriptionNotification")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description_notification");

                    b.Property<int>("IdEmployeedFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employeed_fk");

                    b.Property<byte>("StatusNotification")
                        .HasColumnType("tinyint")
                        .HasColumnName("status_notification");

                    b.Property<string>("TypeNameNotification")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("type_name_notification")
                        .IsFixedLength();

                    b.HasKey("IdNotification");

                    b.HasIndex("IdEmployeedFk");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Permission", b =>
                {
                    b.Property<int>("IdPermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_permission");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermission"));

                    b.Property<string>("DescriptionPermission")
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .HasColumnName("description_permission")
                        .IsFixedLength();

                    b.Property<string>("NamePermission")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("name_permission")
                        .IsFixedLength();

                    b.HasKey("IdPermission")
                        .HasName("PK__Permissi__5180B3BF93E2630D");

                    b.ToTable("Permission", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_person");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerson"));

                    b.Property<string>("AddressPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("address_person");

                    b.Property<double?>("AgePerson")
                        .HasColumnType("float")
                        .HasColumnName("age_person");

                    b.Property<string>("EmailPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email_person");

                    b.Property<int?>("IdCompanyFk")
                        .HasColumnType("int")
                        .HasColumnName("id_company_fk");

                    b.Property<string>("IdentificationPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("identification_person");

                    b.Property<string>("LastNamePerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name_person");

                    b.Property<string>("NamePerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name_person");

                    b.Property<string>("NationalityPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nationality_person");

                    b.Property<Guid>("PersonUUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumberPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("phone_number_person");

                    b.Property<string>("SecondLastNamePerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("second_last_name_person");

                    b.Property<byte?>("StatePerson")
                        .HasColumnType("tinyint")
                        .HasColumnName("state_person");

                    b.HasKey("IdPerson")
                        .HasName("PK__Person__E9AB6A419FC3C7D6");

                    b.HasIndex("IdCompanyFk");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeRole")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("type_role")
                        .IsFixedLength();

                    b.HasKey("IdRole")
                        .HasName("PK__Role__3D48441D62B42DA8");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.RolePermission", b =>
                {
                    b.Property<int>("IdRolePermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_role_permission");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolePermission"));

                    b.Property<int?>("IdPermissionFk")
                        .HasColumnType("int")
                        .HasColumnName("id_permission_fk");

                    b.Property<int?>("IdRoleFk")
                        .HasColumnType("int")
                        .HasColumnName("id_role_fk");

                    b.HasKey("IdRolePermission")
                        .HasName("PK__RolePerm__B8BA225BE4556F0E");

                    b.HasIndex("IdPermissionFk");

                    b.HasIndex("IdRoleFk");

                    b.ToTable("RolePermission", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Session", b =>
                {
                    b.Property<int>("IdSession")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_session");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSession"));

                    b.Property<DateTime?>("CreationDateSession")
                        .HasColumnType("datetime")
                        .HasColumnName("creation_date_session");

                    b.Property<DateTime?>("ExpirationDateSession")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration_date_session");

                    b.Property<int?>("IdUserFk")
                        .HasColumnType("int")
                        .HasColumnName("id_user_fk");

                    b.Property<byte?>("StatusSession")
                        .HasColumnType("tinyint")
                        .HasColumnName("status_session");

                    b.Property<string>("TokenSession")
                        .HasMaxLength(1000)
                        .HasColumnType("nchar(1000)")
                        .HasColumnName("token_session")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDateSession")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date_session");

                    b.HasKey("IdSession")
                        .HasName("PK__Session__A9E494D0F73F88E4");

                    b.HasIndex("IdUserFk");

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Training", b =>
                {
                    b.Property<int>("IdTraining")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_training");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTraining"));

                    b.Property<string>("DescriptionTraining")
                        .HasMaxLength(200)
                        .HasColumnType("nchar(200)")
                        .HasColumnName("description_training")
                        .IsFixedLength();

                    b.Property<string>("NameTraining")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("name_training")
                        .IsFixedLength();

                    b.HasKey("IdTraining")
                        .HasName("PK_training");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("ERP_API.Models.TrainingEmployee", b =>
                {
                    b.Property<int>("IdTrainingEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_training_employee");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrainingEmployee"));

                    b.Property<int>("IdEmployeeFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employee_fk");

                    b.Property<int>("IdTrainingFk")
                        .HasColumnType("int")
                        .HasColumnName("id_training_fk");

                    b.HasKey("IdTrainingEmployee");

                    b.HasIndex("IdEmployeeFk");

                    b.HasIndex("IdTrainingFk");

                    b.ToTable("TrainingEmployee", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime?>("CreationDateUser")
                        .HasColumnType("datetime")
                        .HasColumnName("creation_date_user");

                    b.Property<int?>("IdPersonFk")
                        .HasColumnType("int")
                        .HasColumnName("id_person_fk");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("name_user")
                        .IsFixedLength();

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("password_user")
                        .IsFixedLength();

                    b.HasKey("IdUser")
                        .HasName("PK__User__D2D14637BD867DE2");

                    b.HasIndex("IdPersonFk");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.UserRole", b =>
                {
                    b.Property<int>("IdUserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user_role");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserRole"));

                    b.Property<int?>("IdRoleFk")
                        .HasColumnType("int")
                        .HasColumnName("id_role_fk");

                    b.Property<int?>("IdUserFk")
                        .HasColumnType("int")
                        .HasColumnName("id_user_fk");

                    b.HasKey("IdUserRole")
                        .HasName("PK__UserRole__4FD2ABB33BD08450");

                    b.HasIndex("IdRoleFk");

                    b.HasIndex("IdUserFk");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Vacation", b =>
                {
                    b.Property<int>("IdVacations")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_vacations");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVacations"));

                    b.Property<byte?>("Approved")
                        .HasColumnType("tinyint")
                        .HasColumnName("approved");

                    b.Property<int?>("DaysTaken")
                        .HasColumnType("int")
                        .HasColumnName("days_taken");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int?>("IdEmployeeFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employee_fk");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("IdVacations")
                        .HasName("PK__Vacation__57B18186994EE17E");

                    b.HasIndex("IdEmployeeFk");

                    b.ToTable("Vacation", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.Warning", b =>
                {
                    b.Property<int>("IdWarning")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_warning");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWarning"));

                    b.Property<DateTime>("DateWarning")
                        .HasColumnType("datetime")
                        .HasColumnName("date_warning");

                    b.Property<string>("DescrptionWarning")
                        .HasMaxLength(2000)
                        .HasColumnType("nchar(2000)")
                        .HasColumnName("descrption_warning")
                        .IsFixedLength();

                    b.Property<int>("IdEmployeedFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employeed_fk");

                    b.Property<string>("ReasonWarning")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("reason_warning")
                        .IsFixedLength();

                    b.HasKey("IdWarning");

                    b.HasIndex("IdEmployeedFk");

                    b.ToTable("Warning", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.WorkSchedule", b =>
                {
                    b.Property<int>("IdWorkSchedule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_work_schedule");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWorkSchedule"));

                    b.Property<DateTime>("EndWorkSchedule")
                        .HasColumnType("datetime")
                        .HasColumnName("end_work_schedule");

                    b.Property<int>("IdEmployeerFk")
                        .HasColumnType("int")
                        .HasColumnName("id_employeer_fk");

                    b.Property<string>("NameWorkSchedule")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("name_work_schedule")
                        .IsFixedLength();

                    b.Property<DateTime>("StartWorkSchedule")
                        .HasColumnType("datetime")
                        .HasColumnName("start_work_schedule");

                    b.HasKey("IdWorkSchedule")
                        .HasName("PK_workSchedule");

                    b.HasIndex("IdEmployeerFk");

                    b.ToTable("WorkSchedule", (string)null);
                });

            modelBuilder.Entity("ERP_API.Models.BenefitsEmployee", b =>
                {
                    b.HasOne("ERP_API.Models.Benefit", "IdBenefitsFkNavigation")
                        .WithMany("BenefitsEmployees")
                        .HasForeignKey("IdBenefitsFk")
                        .IsRequired()
                        .HasConstraintName("FK_BenefitsEmployee_Benefit");

                    b.HasOne("ERP_API.Models.Employee", "IdEmployeeFkNavigation")
                        .WithMany("BenefitsEmployees")
                        .HasForeignKey("IdEmployeeFk")
                        .IsRequired()
                        .HasConstraintName("FK_BenefitsEmployee_Employee");

                    b.Navigation("IdBenefitsFkNavigation");

                    b.Navigation("IdEmployeeFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Candidate", b =>
                {
                    b.HasOne("ERP_API.Models.Person", "IdPersonFkNavigation")
                        .WithMany("Candidates")
                        .HasForeignKey("IdPersonFk")
                        .HasConstraintName("FK__Candidate__id_pe__6EF57B66");

                    b.Navigation("IdPersonFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Curriculum", b =>
                {
                    b.HasOne("ERP_API.Models.Employee", "IdEmployeeFkNavigation")
                        .WithMany("Curricula")
                        .HasForeignKey("IdEmployeeFk")
                        .HasConstraintName("FK__Curriculu__id_em__4D94879B");

                    b.Navigation("IdEmployeeFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.CurriculumCandidate", b =>
                {
                    b.HasOne("ERP_API.Models.Candidate", "IdCandidateFkNavigation")
                        .WithMany("CurriculumCandidates")
                        .HasForeignKey("IdCandidateFk")
                        .HasConstraintName("FK__Curriculu__id_ca__71D1E811");

                    b.Navigation("IdCandidateFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Employee", b =>
                {
                    b.HasOne("ERP_API.Models.User", "IdUserFkNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdUserFk")
                        .HasConstraintName("FK__Employee__id_use__3C69FB99");

                    b.Navigation("IdUserFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.FilterCandidate", b =>
                {
                    b.HasOne("ERP_API.Models.Candidate", "IdCandidateFkNavigation")
                        .WithMany("FilterCandidates")
                        .HasForeignKey("IdCandidateFk")
                        .HasConstraintName("FK__FilterCan__id_ca__778AC167");

                    b.HasOne("ERP_API.Models.Filter", "IdFilterFkNavigation")
                        .WithMany("FilterCandidates")
                        .HasForeignKey("IdFilterFk")
                        .HasConstraintName("FK__FilterCan__id_fi__76969D2E");

                    b.Navigation("IdCandidateFkNavigation");

                    b.Navigation("IdFilterFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Notification", b =>
                {
                    b.HasOne("ERP_API.Models.Employee", "IdEmployeedFkNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdEmployeedFk")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Employee");

                    b.Navigation("IdEmployeedFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Person", b =>
                {
                    b.HasOne("ERP_API.Models.Company", "IdCompanyFkNavigation")
                        .WithMany("People")
                        .HasForeignKey("IdCompanyFk")
                        .HasConstraintName("FK_Person_Company");

                    b.Navigation("IdCompanyFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.RolePermission", b =>
                {
                    b.HasOne("ERP_API.Models.Permission", "IdPermissionFkNavigation")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdPermissionFk")
                        .HasConstraintName("FK__RolePermi__id_pe__4AB81AF0");

                    b.HasOne("ERP_API.Models.Role", "IdRoleFkNavigation")
                        .WithMany("RolePermissions")
                        .HasForeignKey("IdRoleFk")
                        .HasConstraintName("FK__RolePermi__id_ro__49C3F6B7");

                    b.Navigation("IdPermissionFkNavigation");

                    b.Navigation("IdRoleFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Session", b =>
                {
                    b.HasOne("ERP_API.Models.User", "IdUserFkNavigation")
                        .WithMany("Sessions")
                        .HasForeignKey("IdUserFk")
                        .HasConstraintName("FK__Session__id_user__3F466844");

                    b.Navigation("IdUserFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.TrainingEmployee", b =>
                {
                    b.HasOne("ERP_API.Models.Employee", "IdEmployeeFkNavigation")
                        .WithMany("TrainingEmployees")
                        .HasForeignKey("IdEmployeeFk")
                        .IsRequired()
                        .HasConstraintName("FK_TrainingEmployee_Employee");

                    b.HasOne("ERP_API.Models.Training", "IdTrainingFkNavigation")
                        .WithMany("TrainingEmployees")
                        .HasForeignKey("IdTrainingFk")
                        .IsRequired()
                        .HasConstraintName("FK_TrainingEmployee_training");

                    b.Navigation("IdEmployeeFkNavigation");

                    b.Navigation("IdTrainingFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.User", b =>
                {
                    b.HasOne("ERP_API.Models.Person", "IdPersonFkNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdPersonFk")
                        .HasConstraintName("FK__User__id_person___398D8EEE");

                    b.Navigation("IdPersonFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.UserRole", b =>
                {
                    b.HasOne("ERP_API.Models.Role", "IdRoleFkNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRoleFk")
                        .HasConstraintName("FK__UserRole__id_rol__440B1D61");

                    b.HasOne("ERP_API.Models.User", "IdUserFkNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUserFk")
                        .HasConstraintName("FK__UserRole__id_use__44FF419A");

                    b.Navigation("IdRoleFkNavigation");

                    b.Navigation("IdUserFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Vacation", b =>
                {
                    b.HasOne("ERP_API.Models.Employee", "IdEmployeeFkNavigation")
                        .WithMany("Vacations")
                        .HasForeignKey("IdEmployeeFk")
                        .HasConstraintName("FK__Vacations__id_em__5070F446");

                    b.Navigation("IdEmployeeFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Warning", b =>
                {
                    b.HasOne("ERP_API.Models.Employee", "IdEmployeedFkNavigation")
                        .WithMany("Warnings")
                        .HasForeignKey("IdEmployeedFk")
                        .IsRequired()
                        .HasConstraintName("FK_Warning_Employee");

                    b.Navigation("IdEmployeedFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.WorkSchedule", b =>
                {
                    b.HasOne("ERP_API.Models.Employee", "IdEmployeerFkNavigation")
                        .WithMany("WorkSchedules")
                        .HasForeignKey("IdEmployeerFk")
                        .IsRequired()
                        .HasConstraintName("FK_workSchedule_Employee");

                    b.Navigation("IdEmployeerFkNavigation");
                });

            modelBuilder.Entity("ERP_API.Models.Benefit", b =>
                {
                    b.Navigation("BenefitsEmployees");
                });

            modelBuilder.Entity("ERP_API.Models.Candidate", b =>
                {
                    b.Navigation("CurriculumCandidates");

                    b.Navigation("FilterCandidates");
                });

            modelBuilder.Entity("ERP_API.Models.Company", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("ERP_API.Models.Employee", b =>
                {
                    b.Navigation("BenefitsEmployees");

                    b.Navigation("Curricula");

                    b.Navigation("Notifications");

                    b.Navigation("TrainingEmployees");

                    b.Navigation("Vacations");

                    b.Navigation("Warnings");

                    b.Navigation("WorkSchedules");
                });

            modelBuilder.Entity("ERP_API.Models.Filter", b =>
                {
                    b.Navigation("FilterCandidates");
                });

            modelBuilder.Entity("ERP_API.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("ERP_API.Models.Person", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ERP_API.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ERP_API.Models.Training", b =>
                {
                    b.Navigation("TrainingEmployees");
                });

            modelBuilder.Entity("ERP_API.Models.User", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Sessions");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
